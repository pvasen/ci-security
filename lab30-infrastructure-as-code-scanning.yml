# Name of the workflow
name: Lab30 IaC Scanning
# How the workflow run is named in GitHub
run-name: Lab30 - ${{ github.actor }} is looking for misconfigurations ⚙️
permissions: read-all
on:
  # Make it possible to other workflows to call this
  workflow_call:
  # Make it possible to manually run this workflow
  workflow_dispatch:
jobs:
  iac-scan-with-checkov:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so follow-up steps can access it
      - uses: actions/checkout@v4

      # Optional TF setup, as plain .tf files are also scanned
      # - uses: hashicorp/setup-terraform@v3
      # - name: Init and Plan terraform
      #   run: |
      #     terraform init
      #     terraform plan -out=plan.tfplan
      #   working-directory: ./labs/lab08-iac-scanning

      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          # This will add both a CLI output to the console and create a results.sarif file
          output_format: cli,sarif
          output_file_path: console,results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3

        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        # An alternative is to add `continue-on-error: true` to the previous step
        # Or 'soft_fail: true' to checkov.
        if: success() || failure()
        with:
          sarif_file: results.sarif
